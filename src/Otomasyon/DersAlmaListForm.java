/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Otomasyon;

import Lib.Lib;
import RequestModel.DataRequest;
import RequestModel.DersRequest;
import RequestModel.DersSecimiListRequest;
import RequestModel.DersSecimiRequest;
import ResponseModel.DataResponse;
import ResponseModel.DersAlmaResponse;
import ResponseModel.DersResponse;
import ResponseModel.DersSecimiListResponse;
import ResponseModel.DersSecimiResponse;
import com.google.gson.reflect.TypeToken;
import java.awt.Component;
import java.awt.Toolkit;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author huseyin
 */
public class DersAlmaListForm extends javax.swing.JInternalFrame {

    List<DersAlmaResponse> dersAlmaResponseList;
    List<DersSecimiListResponse> dersSecimiResponseList;
    DefaultTableModel defaultTableModelDersAlma;
    DefaultTableModel defaultTableModelDersSecme;

    String ogrenci_no;
    String ders_id;

    /**
     * Creates new form OgrenciListForm
     */
    private Component backForm;

    public DersAlmaListForm(Component backForm, String ogrenci_no) {
        initComponents();

        this.backForm = backForm;
        this.ogrenci_no = ogrenci_no;

        Toolkit tk = Toolkit.getDefaultToolkit();
        int withSize = ((int) tk.getScreenSize().getWidth());
        int heightSize = ((int) tk.getScreenSize().getHeight()) - 150;
        this.setSize(withSize, heightSize);

        defaultTableModelDersAlma = (DefaultTableModel) tbl_ders_list.getModel();
        defaultTableModelDersSecme = (DefaultTableModel) tbl_secilen_ders.getModel();

        dersAlmaList();
        dersSecimiList();
        toplam_kredi_yaz();

    }

    public void dersSecimiList() {

        DersSecimiListRequest dersSecimiListRequest = new DersSecimiListRequest();
        dersSecimiListRequest.setOgrenciNo(this.ogrenci_no);

        String json = Lib.jsonResponse("ders_secimi_list", new DataRequest(dersSecimiListRequest));
        DataResponse<DersSecimiListResponse> dataResponse = Lib.gson.fromJson(json, new TypeToken<DataResponse<DersSecimiListResponse>>() {
        }.getType());

        dersSecimiResponseList = dataResponse.getData(this);
        if (dersSecimiResponseList != null) {
            defaultTableModelDersSecme.setRowCount(0);
            for (DersSecimiListResponse dersSecimiListResponse : dersSecimiResponseList) {
                Object[] objects = {
                    dersSecimiListResponse.getDersAlmaId(),
                    dersSecimiListResponse.getDersAdi(),
                    dersSecimiListResponse.getKredi(),
                    dersSecimiListResponse.getDonem()
                };
                defaultTableModelDersSecme.addRow(objects);
            }
        }

    }

    public void dersAlmaList() {

        String json = Lib.jsonResponse("ders_alma_list", new DataRequest());
        DataResponse<DersAlmaResponse> dataResponse = Lib.gson.fromJson(json, new TypeToken<DataResponse<DersAlmaResponse>>() {
        }.getType());

        dersAlmaResponseList = dataResponse.getData(this);
        if (dersAlmaResponseList != null) {
            defaultTableModelDersAlma.setRowCount(0);
            for (DersAlmaResponse dersAlmaResponse : dersAlmaResponseList) {
                Object[] objects = {
                    dersAlmaResponse.getDersId(),
                    dersAlmaResponse.getDersAdi(),
                    dersAlmaResponse.getKredi(),
                    dersAlmaResponse.getDonem()
                };
                defaultTableModelDersAlma.addRow(objects);
            }
        }
    }
    
    public void toplam_kredi_yaz() {
        
        Timer timer = new Timer();
        TimerTask timerTask = new TimerTask() {
            @Override
            public void run() {
                int kredi_toplam = 0;

                for (int i = 0; i < tbl_secilen_ders.getRowCount(); i++) {
                    kredi_toplam += Integer.parseInt(defaultTableModelDersSecme.getValueAt(i, 2).toString());
                }
                
                lbl_toplam_kredi.setText(String.valueOf(kredi_toplam));
            }
        };
        timer.schedule(timerTask, 0, 500);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        btn_sil = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_ders_list = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_secilen_ders = new javax.swing.JTable();
        btn_ekle = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        lbl_toplam_kredi = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Ders Saati");
        setNormalBounds(new java.awt.Rectangle(100, 50, 140, 0));
        setPreferredSize(new java.awt.Dimension(1370, 600));

        btn_sil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Otomasyon/delete.png"))); // NOI18N
        btn_sil.setText("Sil");
        btn_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_silActionPerformed(evt);
            }
        });

        tbl_ders_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DERS ADI", "KREDİ", "DÖNEM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_ders_list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_ders_listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_ders_list);

        tbl_secilen_ders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DERS ADI", "KREDİ", "DÖNEM"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tbl_secilen_ders);

        btn_ekle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Otomasyon/add.png"))); // NOI18N
        btn_ekle.setText("Ekle");
        btn_ekle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ekleActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Toplam Kredi :");

        lbl_toplam_kredi.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lbl_toplam_kredi.setForeground(new java.awt.Color(255, 255, 255));
        lbl_toplam_kredi.setText("0");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ders Listesi");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Seçilen Dersler");

        jDesktopPane1.setLayer(btn_sil, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btn_ekle, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(lbl_toplam_kredi, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(0, 560, Short.MAX_VALUE)
                        .addComponent(btn_ekle, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(lbl_toplam_kredi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_sil, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 641, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_sil)
                    .addComponent(btn_ekle)
                    .addComponent(jLabel1)
                    .addComponent(lbl_toplam_kredi))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_silActionPerformed

        
        if (tbl_secilen_ders.getSelectedRow() == -1) {
            JOptionPane.showMessageDialog(this, "Ders Seçilmedi");
        }
        else {
            
            secilen_ders_sil();
            
        }

    }//GEN-LAST:event_btn_silActionPerformed

    public void secilen_ders_sil() {
        String ders_alma_id = defaultTableModelDersSecme.getValueAt(tbl_secilen_ders.getSelectedRow(), 0).toString();

        DersSecimiListRequest dersSecimiListRequest = new DersSecimiListRequest();
        dersSecimiListRequest.setDersAlmaId(ders_alma_id);
        dersSecimiListRequest.setOgrenciNo(this.ogrenci_no);
        
        String json = Lib.jsonResponse("delete_secilen_ders", new DataRequest(dersSecimiListRequest));
        DataResponse<DersSecimiListResponse> dataResponse = Lib.gson.fromJson(json, new TypeToken<DataResponse<DersSecimiListResponse>>() {
        }.getType());

        dersSecimiResponseList = dataResponse.getData(this);
        if (dersSecimiResponseList != null) {
            dersSecimiList();
        }
    }

    private void tbl_ders_listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_ders_listMouseClicked


    }//GEN-LAST:event_tbl_ders_listMouseClicked

    private void btn_ekleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ekleActionPerformed
        if (tbl_ders_list.getSelectedRow() == -1) {  ///// Satır Seçilmediyse
            JOptionPane.showMessageDialog(this, "Ders Seçilmedi");
        } else { 

            String ders_adi = defaultTableModelDersAlma.getValueAt(tbl_ders_list.getSelectedRow(), 1).toString();
            boolean onay = true;

            for (int i = 0; i < tbl_secilen_ders.getRowCount(); i++) {
                if (defaultTableModelDersSecme.getValueAt(i, 1).toString().equals(ders_adi)) {
                    onay = false;
                }
            }

            if (onay == false) {  //// Aynı dersi eklemeye çalışıyorsa
                JOptionPane.showMessageDialog(this, "'" + ders_adi + "' Dersini Zaten Eklediniz");
                onay = true;
            } else {  

                int kredi_toplam = 0;

                for (int i = 0; i < tbl_secilen_ders.getRowCount(); i++) {
                    kredi_toplam += Integer.parseInt(defaultTableModelDersSecme.getValueAt(i, 2).toString());
                }

                int secili_dersin_kredisi = Integer.parseInt(defaultTableModelDersAlma.getValueAt(tbl_ders_list.getSelectedRow(), 2).toString());

                if ((kredi_toplam + secili_dersin_kredisi) > 30) {  ///  Ders Eklerken 30 Krediyi Aşıyorsa
                    JOptionPane.showMessageDialog(this, "Bu Ders için Krediniz Yetmiyor. Seçmiş olduğunuz kredi: " + kredi_toplam);
                } else {
                    this.ders_id = defaultTableModelDersAlma.getValueAt(tbl_ders_list.getSelectedRow(), 0).toString();
                    ders_secimi(this.ders_id);
                    dersSecimiList();
                }
            }

        }
    }//GEN-LAST:event_btn_ekleActionPerformed

    public void ders_secimi(String ders_id) {

        DersSecimiRequest dersSecimiRequest = new DersSecimiRequest();
        dersSecimiRequest.setDersId(ders_id);
        dersSecimiRequest.setOgrenciNo(this.ogrenci_no);

        String json = Lib.jsonResponse("insert_update_ders_secimi", new DataRequest(dersSecimiRequest));
        DataResponse<DersSecimiResponse> dataResponse = Lib.gson.fromJson(json, new TypeToken<DataResponse<DersSecimiResponse>>() {
        }.getType());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_ekle;
    private javax.swing.JButton btn_sil;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_toplam_kredi;
    private javax.swing.JTable tbl_ders_list;
    private javax.swing.JTable tbl_secilen_ders;
    // End of variables declaration//GEN-END:variables
}
